apiVersion: v1
kind: Secret
metadata:
  name: jenkins-nginx-secret
  namespace: devops
type: Opaque
stringData:
  NGINX_CONF_KEY: |
    # custom KUBE nginx config

    user nginx;

    # worker_processes: Cette directive contrôle le nombre de travailleurs dans Nginx.
    # La valeur de cette directive est définie sur auto pour permettre à Nginx de déterminer
    # le nombre de cœurs disponibles, les disques, la charge du serveur et le sous-système réseau.
    # Cependant, vous pouvez découvrir le nombre de cœurs en exécutant la commande lscpu sur le terminal.
    worker_processes    auto;

    # worker_rlimit_nofile: Cette directive est en quelque sorte liée à worker_connections.
    # Afin de gérer une grande connexion simultanée, nous la définissons sur une valeur élevée.
    # Also set
    # /etc/security/limits.conf
    #   web soft nofile 65535
    #   web hard nofile 65535
    # /etc/default/nginx
    #       ULIMIT="-n 65535"
    worker_rlimit_nofile 65535;

    # Chemin vers le fichier PID de nginx
    # pid /run/nginx.pid;

    events {

      worker_connections  1024;

      # multi_accept:  Cette directive permet à un travailleur d'accepter plusieurs connexions
      # dans la file d'attente à la fois. Une file d'attente dans ce contexte signifie simplement
      # une séquence d'objets de données en attente de traitement.
      multi_accept        on;

      # use: Cette directive spécifie la méthode pour traiter une connexion à partir du client.
      # Dans ce tutoriel, nous avons décidé de définir la valeur sur epoll parce que nous travaillons
      # sur un Ubuntu Plate-forme. le epoll est la méthode de traitement la plus efficace pour les plates-formes Linux.
      use                 epoll;

      # epoll_events:  La valeur de cette directive spécifie le nombre d'événements que Nginx transférera vers le noyau.
      epoll_events        512;
    }

    http {

      # Utilisation de la primitive sendfile() du kernel
      # C'est un appel système pour le transfert des données entre le disque et la pile TCP.
      # L'utilisation de cette primitive accroît les performances car les données sont
      # manipulées directement via le kernel.
      #
      # https://www.kernel.org/doc/man-pages/online/pages/man2/sendfile.2.html
      sendfile on;

      # keepalive_timeout: Gardez les connexions actives pendant environ 30 secondes. La valeur par défaut est de 75 secondes.
      keepalive_timeout  30s;

      # keepalive_requests: Configurez un certain nombre de demandes pour qu'elles restent
      # actives pendant une période de temps spécifique. Vous pouvez définir le nombre de demandes sur 20 ou 30.
      keepalive_requests 30;

      # send_timeout: Définissez un délai d'expiration pour la transmission des données au client.
      send_timeout      30s;

      # Désactivation de l'affichage du numéro de version dans les headers HTTP et sur les pages d'erreur.
      server_tokens off;

      # Type MIME par défaut quand aucun type n'a été spécifié
      default_type application/octet-stream;

      # On inclut la liste des "type MIME"
      include mime.types;

      # Chemins vers les fichiers de logs
      access_log    /var/log/nginx/access.log combined;
      error_log     /var/log/nginx/error.log warn;

      # gzip:  Si vous souhaitez activer la compression, définissez la valeur de cette
      # directive sur on. Par défaut, c'est désactivé
      gzip off;

      # gzip_http_version:  Cette directive vous permet de choisir la version HTTP minimale d'une requête
      # pour une réponse compressée. Vous pouvez utiliser la valeur par défaut qui est 1.1
      gzip_http_version 1.1;

      # gzip_comp_level:  Vous pouvez utiliser cette directive pour définir le niveau de compression.
      # Afin de ne pas gaspiller les ressources du processeur, vous n'avez pas besoin de définir un niveau
      # de compression trop élevé. Entre 1 et 9, vous pouvez régler le niveau de compression sur 2 or 3.
      gzip_comp_level 5;

      # gzip_min_length:  Définissez la longueur de réponse minimale pour la compression via le
      # content-length response header field. Vous pouvez le définir sur plus de 20 octets.
      gzip_min_length  1000;

      gzip_buffers 4 8k;
      gzip_proxied any;

      # gzip_types: Cette directive vous permet de choisir le type de réponse que vous souhaitez compresser.
      # Par défaut, le type de réponse text/html est toujours compressé. Vous pouvez ajouter un autre type de
      # réponse tel que text/css comme indiqué dans le code ci-dessus.
      gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/vnd.ms-fontobject
        font/truetype
        font/opentype
        image/svg+xml;

      # gzip_disabled:  Certains navigateurs tels que Internet Explorer 6 je n'ai pas de support pour gzip compression.
      # Cette directive utilise User-Agent champ d'en-tête de demande pour désactiver la compression pour certains navigateurs.
      gzip_disable "MSIE [1-6]\.";

      # gzip_vary:  Quand gzip directive est activée, cette directive ajoute le champ d'en-tête Vary:Accept Encoding  à la réponse.
      gzip_vary on;

      # Inclusion des fichiers de configuration personnalisés http
      include /etc/nginx/nginx.d/*.conf;

    }

    # Inclusion des fichiers de configuration personnalisés tcp
    # include /etc/nginx/stream/*.conf;
  APP_CONF_KEY: |
    map $ssl_client_fingerprint $reject {
        default 1;
        2BF61Dxxxxxxxxxxxx 0;
    }

    # Required for Jenkins websocket agents
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    #server {
    #    listen 80;
    #    server_name jenkins.kube.local;
    #    return 301 https://$host$request_uri;
    #}

    upstream node_backend {
        #hash   $binary_remote_addr consistent;
        zone   upstreams 64K;
        server jenkins-service.devops.svc.cluster.local:80 max_fails=1 fail_timeout=2s;
        keepalive 5;
    }

    server {

        listen 80;
        listen 443 ssl http2;
        server_name jenkins.kube.local;

        # this is the jenkins web root directory
        # (mentioned in the output of "systemctl cat jenkins")
        root            /var/run/jenkins/war/;

        # pass through headers from Jenkins that Nginx considers invalid
        ignore_invalid_headers off;

        #######################################################
        # Managing SSO AUTHENTICATION
        #######################################################
    #
    #    auth_request /auth;
    #    error_page 401 = @error401;
    #    location @error401 {
    #        return 302 https://login.sso.com;
    #    }
    #
    #    location = /auth {
    #        internal;
    #        proxy_pass https://api.sso.com;
    #        proxy_pass_request_body     off;
    #
    #        proxy_set_header Content-Length "";
    #        proxy_set_header X-Original-URI $request_uri;
    #        proxy_set_header Host $http_host;
    #        proxy_set_header X-Real-IP $remote_addr;
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #        proxy_set_header X-Forwarded-Proto $scheme;
    #
    #        if ($http_cookie ~* "sso_token=([^;]+)(?:;|$)") {
    #            set $token "$1";
    #        }
    #        proxy_set_header X-SSO-Token $token;
    #    }


        #######################################################
        # Managing Client certificat filtering / authorization
        #######################################################

        # CA certificate for mutual TLS
    #   ssl_client_certificate /etc/pki/tls/certs/ca-bundle.crt;

        # need to validate client certificate(if this flag optional it won't
        # validate client certificates)  on | off | optional | optional_no_ca
    #   ssl_verify_client optional;
    #   if ($reject) { return 403; }


        #######################################################
        # Managing HTTPS / TLS - EXTERNAL SIDE
        # https://ssl-config.mozilla.org/
        #######################################################

        # set application certificat
        ssl_certificate           /etc/nginx/ssl/cert-ext.pem;
        ssl_certificate_key       /etc/nginx/ssl/cert-ext.key;

        # Disable SSL and old TLS versions
        ssl_protocols             TLSv1.2 TLSv1.3;

        # set Diffie-Hellman key exchange
    #   ssl_dhparam               /etc/nginx/ssl/cert-ext.dh;

        # Optimise cipher suites
        ssl_prefer_server_ciphers on;
        ssl_ciphers               ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!ADH:!AECDH:!MD5;

        # Enable OCSP stapling
    #   ssl_stapling on;
    #   ssl_stapling_verify on;
        # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #   ssl_trusted_certificate /etc/pki/tls/certs/ca-bundle.crt;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # Optimise SSL session cache
        ssl_session_cache      shared:SSL:10m;
        ssl_session_timeout    10m;

        # Disable session tickets
        # Necessary for Perfect Forward Secrecy (PFS)
        ssl_session_tickets    off;


        #######################################################
        # Managing PROXY
        #######################################################

        proxy_send_timeout      120;
        proxy_read_timeout      300;
        proxy_buffering         off;
        proxy_request_buffering off; # Required for HTTP CLI commands
        keepalive_timeout       5 5;
        tcp_nodelay             on;

        # allow large uploads of files - refer to nginx documentation
        client_max_body_size 2G;

        # optimize downloading files larger than 1G - refer to nginx doc before adjusting
        # proxy_max_temp_file_size 2G;

        #######################################################
        # Managing HTTPS / TLS - INTERNAL SIDE
        #######################################################

    #    proxy_ssl_certificate         /etc/nginx/ssl/cert-int.pem;
    #    proxy_ssl_certificate_key     /etc/nginx/ssl/cert-int.key;
    #    proxy_ssl_trusted_certificate /etc/nginx/ssl/ca.pem;
    #    proxy_ssl_verify              on;
    #    proxy_ssl_verify_depth        3;
    #    proxy_ssl_session_reuse       on;
    #    proxy_ssl_protocols           TLSv1.2 TLSv1.3;
    #    proxy_ssl_ciphers             HIGH:!aNULL:!MD5;

        location ~ "^/static/[0-9a-fA-F]{8}\/(.*)$" {
        # rewrite all static files into requests to the root
        # E.g /static/12345678/css/something.css will become /css/something.css
            rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
        }

        location /userContent {
            # have nginx handle all the static requests to userContent folder
            # note : This is the $JENKINS_HOME dir
            root /var/lib/jenkins/;
            if (!-f $request_filename){
              # this file does not exist, might be a directory or a /**view** url
              rewrite (.*) /$1 last;
              break;
            }
            sendfile on;
        }

        location / {

            sendfile off;

            #######################################################
            # Managing Application
            #######################################################

            proxy_pass          http://node_backend/;
            proxy_next_upstream error timeout http_500;
            proxy_http_version 1.1;

            # Fix potential "It appears that your reverse proxy setup is broken" error.
            proxy_redirect     default;

            # Required for Jenkins websocket agents
            proxy_set_header   Connection        $connection_upgrade;
            proxy_set_header   Upgrade           $http_upgrade;

            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_max_temp_file_size 0;

            proxy_cache_bypass      $http_upgrade;

            #this is the maximum upload size
            client_max_body_size    10m;
            client_body_buffer_size 128k;

            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         90;
            proxy_buffering            off;
            proxy_request_buffering    off; # Required for HTTP CLI commands
            proxy_set_header Connection ""; # Clear for keepalive

        }

    }
  APP_CERT_KEY: |
    -----BEGIN PRIVATE KEY-----
    MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDB3ao0004odwSE
    UEQNw17eTk5AmWcYp5AMefr7rq9LtEsllp6jnUy9NothWjsHWsHEvGBpDWhFw8cJ
    ENR/no9I152DE+NUtst6nmFicpkhaR3poE7ZHws0pe6IU4+OO8ftLGexB3f/ERHb
    s44wQAXEuDb4AMdjb7K7nJkiX5wgdFgYvtxZpfPDcvvb7YpctdW23SmcSt2PJ+5v
    gUZDjqiQCMvHWuMN1lTO38eQX/EAgxavUeY3EgYmyRJBlSAAfUmyvsH0SSWAEmZ5
    g4Ffa8SrwynjPYWr1TaiNMuWPy4Dh7q3ntYPY308FEW6ydVO3Ju+1rorhp0PBmdZ
    XFHHm65jAgMBAAECggEAOo/QO5bdFEInniR0+kdbIAI9hywPxZXQYMR0OZTiJRc4
    YAlosHny1XFllynfjPAwelKBORqwtepW9HkeB9MI63MehJr8X/m767VuK4P8l+gd
    /hXL27CR/Pxm2s2LHucWFKIGTKa569XnNBvARvkABRW0nSP3FyWFs0CxzX1eNzsG
    FCCDLZCYEQ49VNS7A36b3HteG/qCfb4DzE2/YYkKweUMbEycNbgAxzBKk+FD5LLS
    y/3K68tTtdNPIuABr7zt6W3ST9wn/WURdR4klwb5Zf2lQezYkswt1KPfi1HGGYXG
    HXbR3bUV0TITksSYREZnRQtUTvEauS3vxdQfAzwzIQKBgQD+8pPF4fb5cPaBUwWW
    hQasUToqP8a1X29ZmNy3magNB0UhTnQUv952Qvm59PowZH8p9+V4mWoEm0kyLDFS
    3yp9BN0Sffz8pHIGGQjTOkwS6ubLrh0fb3hKqoTaXg8/mRPPlDimrgMrlRCAj8Bx
    iGhMUynztAaPd94UnLM4JUBR0QKBgQDCqomzqKg4M+mtliJJkuUUlubdsmXJz5Vj
    cysmW0X4xPY5Fih6JMrZZbmFXHM+G5KnRy+Cm83MLPjIdK2rlv1n8/w/4efDZ7XA
    9T7Z46VEyDsmnyK4dRHZAz0cQJAEnW3vn1H4IZmVrho4ydfc04uHGMcf5VU6pvbC
    ITpvwHH18wKBgHXe+WtX2bPiAlYwaDj7L+ajd1zpN5nLkdO+1O0d4ZCEd/W6K/kb
    7GKI/KR5GuMc0543uqRTaazPjrvfqr5B54b9pKhUD49PCFjBYk8meN2WNTaePWC3
    TMpYpCvBqRMiVwJ16OtHMLgJpyOJUtQq2O3Q1WiTJyVVqhulh0bCEkbBAoGAGZMS
    GDpWL1wSnS2WP5g+5F+W4RVo7gSJmdEtoBJptO8bchCJLNLcm4cTwoOM2GIC+FsP
    0NbrSKG35Y3+qwZhMGELiNEDA9cCN+GAalvQAKNVshNCGn225I3aX3XT9edA5DRI
    LpMrfFCtPTy3UVmxgQQuVPBqLBR3YrW+2aOs1SUCgYBHRpjkTBl6HiJoTSSi9kuP
    Y5SGGflhB/ql58L/GswKlh3OmX8oghnNZRDVe3pfpJnvO6BEhM7HiWdmkeXEU8ey
    TAWci7zj92MKirrgtu015JaR2HDDl5x5A4RFq9R3Fz5P+rKwM5ymBqSr4RSkK4iC
    LypvaakNGgc2rmuJg5WndQ==
    -----END PRIVATE KEY-----
  APP_CERT_PEM: |
    -----BEGIN TRUSTED CERTIFICATE-----
    MIIDqDCCApCgAwIBAgIJALWrW+Us0ndtMA0GCSqGSIb3DQEBBQUAMFUxCzAJBgNV
    BAYTAkZSMQswCQYDVQQIDAIzMTEMMAoGA1UEBwwDVExTMQswCQYDVQQKDAJNRTEM
    MAoGA1UECwwDVE9PMRAwDgYDVQQDDAdqZW5raW5zMB4XDTIyMTAwNjEyMTQzMloX
    DTI0MTAwNTEyMTQzMlowVTELMAkGA1UEBhMCRlIxCzAJBgNVBAgMAjMxMQwwCgYD
    VQQHDANUTFMxCzAJBgNVBAoMAk1FMQwwCgYDVQQLDANUT08xEDAOBgNVBAMMB2pl
    bmtpbnMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDB3ao0004odwSE
    UEQNw17eTk5AmWcYp5AMefr7rq9LtEsllp6jnUy9NothWjsHWsHEvGBpDWhFw8cJ
    ENR/no9I152DE+NUtst6nmFicpkhaR3poE7ZHws0pe6IU4+OO8ftLGexB3f/ERHb
    s44wQAXEuDb4AMdjb7K7nJkiX5wgdFgYvtxZpfPDcvvb7YpctdW23SmcSt2PJ+5v
    gUZDjqiQCMvHWuMN1lTO38eQX/EAgxavUeY3EgYmyRJBlSAAfUmyvsH0SSWAEmZ5
    g4Ffa8SrwynjPYWr1TaiNMuWPy4Dh7q3ntYPY308FEW6ydVO3Ju+1rorhp0PBmdZ
    XFHHm65jAgMBAAGjezB5MHcGA1UdEQRwMG6CEmplbmtpbnMua3ViZS5sb2NhbIIo
    amVua2lucy1zZXJ2aWNlLmRldm9wcy5zdmMuY2x1c3Rlci5sb2NhbIIuamVua2lu
    cy1uZ2lueC1zZXJ2aWNlLmRldm9wcy5zdmMuY2x1c3Rlci5sb2NhbDANBgkqhkiG
    9w0BAQUFAAOCAQEAfQN2xr4zsuCCgrPbfceVsq9Xf/qEzI2yZhCiPGopvQQiz4WY
    ieB1cW5Grknuao1tc63soR+6xz0+45wA3V7hqIUZzfts0yV27+6FZx2nCyQ9bS+3
    kVi4h/naR4swk/GFJUuxwMLxQdbHMkyYNVMj7vTw1qoY1MB6gnL9JIO57v8C6kD7
    e0xfXYNuInx85qWVKg8E/EYqN9ibnhjsq+MmhQFvAlWrjMk+M0HlQlgmNdQAmpL/
    w+YyoiHTee5ZryDfHDB7YNUhq1ZnU13Y0fvuO8IIE2IRWTCBV7KJEaFdn5fRbhXx
    9R3IgQ7HPdsMUuQYzfqnytaGDxqqtj+TkxeNug==
    -----END TRUSTED CERTIFICATE-----
